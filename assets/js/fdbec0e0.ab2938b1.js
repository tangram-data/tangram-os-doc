"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[304],{8453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>l});var i=n(6540);const r={},o=i.createContext(r);function t(e){const s=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(o.Provider,{value:s},e.children)}},8605:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"tutorial-IAM/roles","title":"Roles","description":"Tangram OS implements a Role-Based Access Control (RBAC) model to manage permissions and access to resources.","source":"@site/docs/tutorial-IAM/roles.mdx","sourceDirName":"tutorial-IAM","slug":"/tutorial-IAM/roles","permalink":"/tangram-os-doc/tutorial-IAM/roles","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"IAM Service","permalink":"/tangram-os-doc/category/iam-service"},"next":{"title":"Service Accounts","permalink":"/tangram-os-doc/tutorial-IAM/service-account"}}');var r=n(4848),o=n(8453);const t=n.p+"assets/images/clickhouse_role-83d5f2c3a89719175a20255c327882ee.png",l={sidebar_position:1},c="Roles",a={},d=[{value:"Role Definition",id:"role-definition",level:3},{value:"Role Binding",id:"role-binding",level:3},{value:"Role Permission Scope",id:"role-permission-scope",level:2},{value:"Example: Scoped Permission for Iceberg Tables",id:"example-scoped-permission-for-iceberg-tables",level:3}];function p(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"roles",children:"Roles"})}),"\n",(0,r.jsxs)(s.p,{children:["Tangram OS implements a ",(0,r.jsx)(s.strong,{children:"Role-Based Access Control (RBAC)"})," model to manage permissions and access to resources."]}),"\n",(0,r.jsx)(s.h3,{id:"role-definition",children:"Role Definition"}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(s.strong,{children:"Role"})," is an identity that encapsulates a set of permissions. Roles are created within a ",(0,r.jsx)(s.strong,{children:"workspace"})," by a ",(0,r.jsx)(s.strong,{children:"workspace admin"}),"."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Permissions are assigned to a role to define what actions can be performed on which resource types."}),"\n",(0,r.jsx)(s.li,{children:"Once defined, roles can be reused and applied to multiple accounts."}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"role-binding",children:"Role Binding"}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(s.strong,{children:"Role Binding"})," grants the permissions of a role to an ",(0,r.jsx)(s.strong,{children:"account"}),".",(0,r.jsx)(s.br,{}),"\n","An account can be:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["A ",(0,r.jsx)(s.strong,{children:"user"})]}),"\n",(0,r.jsxs)(s.li,{children:["A ",(0,r.jsx)(s.strong,{children:"user group"})]}),"\n",(0,r.jsxs)(s.li,{children:["A ",(0,r.jsx)(s.strong,{children:"service account"})]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"Role bindings allow centralized management of access policies across different types of identities."}),"\n",(0,r.jsx)(s.h2,{id:"role-permission-scope",children:"Role Permission Scope"}),"\n",(0,r.jsxs)(s.p,{children:["Tangram OS supports ",(0,r.jsx)(s.strong,{children:"scoped permissions"}),", allowing administrators to limit the effect of a role's permissions to a specific context or level of the resource hierarchy."]}),"\n",(0,r.jsx)(s.h3,{id:"example-scoped-permission-for-iceberg-tables",children:"Example: Scoped Permission for Iceberg Tables"}),"\n",(0,r.jsxs)(s.p,{children:["Consider a role with the ClickHouse ",(0,r.jsx)(s.code,{children:"Table:Read"})," permission:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Workspace-Level Scope"}),":",(0,r.jsx)(s.br,{}),"\n","Allows the role to read all ClickHouse tables across the entire workspace."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Database-Level Scope"}),":",(0,r.jsx)(s.br,{}),"\n","Restricts read access to ClickHouse tables within a specific ClickHouse database."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Table-Level Scope"}),":",(0,r.jsx)(s.br,{}),"\n","Grants permission to read from a single, specific ClickHouse table only."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["This scoped approach enables ",(0,r.jsx)(s.strong,{children:"fine-grained access control"}),", supporting the principle of least privilege and enhancing security."]}),"\n",(0,r.jsx)("div",{style:{display:"flex",justifyContent:"center"},children:(0,r.jsx)("img",{src:t})})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);